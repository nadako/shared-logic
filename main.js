// Generated by Haxe 4.0.0 (git build development @ 8366563)
(function () { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var MyEnum = { __ename__ : true, __constructs__ : ["A","B","C"] };
MyEnum.A = ["A",0];
MyEnum.A.toString = $estr;
MyEnum.A.__enum__ = MyEnum;
MyEnum.B = function(a) { var $x = ["B",1,a]; $x.__enum__ = MyEnum; $x.toString = $estr; return $x; };
MyEnum.C = function(a,b) { var $x = ["C",2,a,b]; $x.__enum__ = MyEnum; $x.toString = $estr; return $x; };
var classy_core_ValueBase = function() { };
classy_core_ValueBase.__name__ = true;
classy_core_ValueBase.prototype = {
	__makeFieldPath: function(path) {
		var object = this;
		while(object.__parent != null) {
			path.push(object.__name);
			object = object.__parent;
		}
		path.reverse();
		return path;
	}
};
var classy_core_Value = function() { };
classy_core_Value.__name__ = true;
classy_core_Value.__super__ = classy_core_ValueBase;
classy_core_Value.prototype = $extend(classy_core_ValueBase.prototype,{
});
var Player = function() { };
Player.__name__ = true;
Player.__fromRawValue = function(raw) {
	var instance = Object.create(Player.prototype);
	instance.set_some(raw.some);
	return instance;
};
Player.__super__ = classy_core_Value;
Player.prototype = $extend(classy_core_Value.prototype,{
	set_some: function(value) {
		var _gthis = this;
		var oldValue = this.some;
		if(oldValue != value) {
			this.some = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.some = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["some"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : value} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
});
var GameData = function() {
};
GameData.__name__ = true;
GameData.fromRawValue = function(raw) {
	return GameData.__fromRawValue(raw);
};
GameData.__fromRawValue = function(raw) {
	var instance = Object.create(GameData.prototype);
	instance.set_value(null);
	return instance;
};
GameData.__super__ = classy_core_Value;
GameData.prototype = $extend(classy_core_Value.prototype,{
	set_value: function(value) {
		var _gthis = this;
		var oldValue = this.value;
		if(oldValue != value) {
			this.value = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.value = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["value"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : value} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
	,__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
	}
	,__toRawValue: function() {
		var raw = { };
		if(this.value != null) {
			raw.value = this.value;
		}
		return raw;
	}
});
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var data = GameData.__fromRawValue({ });
	data.__setup(new classy_core_Transaction(),new classy_core_DbChanges());
	console.log("Main.hx:38:",JSON.stringify(data.__toRawValue()));
};
Math.__name__ = true;
var classy_core_DbChanges = function() {
	this.changes = [];
};
classy_core_DbChanges.__name__ = true;
var classy_core_Transaction = function() {
	this.rollbacks = [];
};
classy_core_Transaction.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if((o instanceof Array)) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
Main.main();
})();
