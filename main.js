// Generated by Haxe 4.0.0 (git build development @ 3efc28e)
(function () { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var classy_core_RawValueConverter = function() { };
classy_core_RawValueConverter.__name__ = true;
var classy_core_Helper = function() { };
classy_core_Helper.__name__ = true;
var HeroState_$_$Helper = function() {
};
HeroState_$_$Helper.__name__ = true;
HeroState_$_$Helper.__interfaces__ = [classy_core_Helper];
HeroState_$_$Helper.prototype = {
	link: function(value,parent,name) {
		switch(value[1]) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			var warData = value[2];
			if(warData != null) {
				warData.__link(parent,name + ".warData");
			}
			break;
		}
	}
	,setup: function(value,transaction,dbChanges) {
		switch(value[1]) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			var warData = value[2];
			if(warData != null) {
				warData.__setup(transaction,dbChanges);
			}
			break;
		}
	}
	,unlink: function(value) {
		switch(value[1]) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			var warData = value[2];
			if(warData != null) {
				warData.__unlink();
			}
			break;
		}
	}
	,toRawValue: function(value) {
		switch(value[1]) {
		case 0:
			return "Free";
		case 1:
			return "InSquad";
		case 2:
			var raw = { "$tag" : "OnMap"};
			raw.placeId = value[2];
			return raw;
		case 3:
			var warData = value[2];
			var raw1 = { "$tag" : "AtWar"};
			if(warData != null) {
				raw1.warData = warData.__toRawValue();
			}
			return raw1;
		}
	}
};
var HeroState_$_$RawValueConverter = function() {
};
HeroState_$_$RawValueConverter.__name__ = true;
HeroState_$_$RawValueConverter.__interfaces__ = [classy_core_RawValueConverter];
HeroState_$_$RawValueConverter.prototype = {
	fromRawValue: function(raw) {
		if(raw == "InSquad") {
			return HeroState.InSquad;
		} else if(raw == "Free") {
			return HeroState.Free;
		} else {
			var _g = Reflect.field(raw,"$tag");
			switch(_g) {
			case "AtWar":
				return HeroState.AtWar(HeroWarData.__fromRawValue(raw.warData));
			case "OnMap":
				return HeroState.OnMap(raw.placeId);
			default:
				throw new js__$Boot_HaxeError("Unknown enum tag: " + _g);
			}
		}
	}
};
var Hero_$_$RawValueConverter = function() {
};
Hero_$_$RawValueConverter.__name__ = true;
Hero_$_$RawValueConverter.__interfaces__ = [classy_core_RawValueConverter];
Hero_$_$RawValueConverter.prototype = {
	fromRawValue: function(raw) {
		return Hero.__fromRawValue(raw);
	}
};
var classy_core_ValueBase = function() { };
classy_core_ValueBase.__name__ = true;
classy_core_ValueBase.prototype = {
	__link: function(parent,name) {
		if(this.__parent != null) {
			throw new js__$Boot_HaxeError("Object is already linked");
		}
		this.__parent = parent;
		this.__name = name;
		this.__setup(this.__parent.__transaction,this.__parent.__dbChanges);
	}
	,__unlink: function() {
		this.__parent = null;
		this.__name = null;
		this.__dbChanges = null;
	}
	,__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
	}
	,__toRawValue: function() {
		return { };
	}
	,__makeFieldPath: function(path) {
		var object = this;
		while(object.__parent != null) {
			var name = object.__name;
			var end = name.length;
			var i = name.length;
			while(i-- > 0) if(name.charCodeAt(i) == 46) {
				path.push(name.substring(i + 1,end));
				end = i;
			}
			path.push(name.substring(0,end));
			object = object.__parent;
		}
		path.reverse();
		return path;
	}
};
var classy_core_Value = function() { };
classy_core_Value.__name__ = true;
classy_core_Value.__super__ = classy_core_ValueBase;
classy_core_Value.prototype = $extend(classy_core_ValueBase.prototype,{
});
var GameData = function() {
	this.set_player(new Player());
};
GameData.__name__ = true;
GameData.__fromRawValue = function(raw) {
	var instance = Object.create(GameData.prototype);
	instance.set_player(Player.__fromRawValue(raw.player));
	return instance;
};
GameData.__super__ = classy_core_Value;
GameData.prototype = $extend(classy_core_Value.prototype,{
	setup: function(transaction,dbChanges) {
		this.__setup(transaction,dbChanges);
	}
	,toRawValue: function() {
		return this.__toRawValue();
	}
	,set_player: function(value) {
		var _gthis = this;
		var oldValue = this.player;
		if(oldValue != value) {
			if(oldValue != null) {
				oldValue.__unlink();
			}
			if(value != null) {
				value.__link(this,"player");
			}
			this.player = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.player = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["player"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : value.__toRawValue()} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
	,__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
		if(this.player != null) {
			this.player.__setup(transaction,dbChanges);
		}
	}
	,__toRawValue: function() {
		var raw = { };
		if(this.player != null) {
			raw.player = this.player.__toRawValue();
		}
		return raw;
	}
});
var Player = function() {
	this.set_heroes(new classy_core_ArrayValueImpl());
};
Player.__name__ = true;
Player.__fromRawValue = function(raw) {
	var instance = Object.create(Player.prototype);
	instance.set_heroes(classy_core_ArrayValueImpl.__fromRawValue(raw.heroes,Hero_$_$RawValueConverter.instance));
	return instance;
};
Player.__super__ = classy_core_Value;
Player.prototype = $extend(classy_core_Value.prototype,{
	set_heroes: function(value) {
		var _gthis = this;
		var oldValue = this.heroes;
		if(oldValue != value) {
			if(oldValue != null) {
				oldValue.__unlink();
			}
			if(value != null) {
				value.helper = classy_core_ValueHelper.instance;
				value.__link(this,"heroes");
			}
			this.heroes = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.heroes = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["heroes"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : value.__toRawValue()} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
	,__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
		if(this.heroes != null) {
			this.heroes.__setup(transaction,dbChanges);
		}
	}
	,__toRawValue: function() {
		var raw = { };
		if(this.heroes != null) {
			raw.heroes = this.heroes.__toRawValue();
		}
		return raw;
	}
});
var Hero = function(name) {
	this.set_name(name);
	this.set_state(HeroState.Free);
};
Hero.__name__ = true;
Hero.__fromRawValue = function(raw) {
	var instance = Object.create(Hero.prototype);
	instance.set_name(raw.name);
	instance.set_state(HeroState_$_$RawValueConverter.instance.fromRawValue(raw.state));
	return instance;
};
Hero.__super__ = classy_core_Value;
Hero.prototype = $extend(classy_core_Value.prototype,{
	set_name: function(value) {
		var _gthis = this;
		var oldValue = this.name;
		if(oldValue != value) {
			this.name = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.name = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["name"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : value} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
	,set_state: function(value) {
		var _gthis = this;
		var oldValue = this.state;
		if(oldValue != value) {
			if(oldValue != null) {
				HeroState_$_$Helper.instance.unlink(oldValue);
			}
			if(value != null) {
				HeroState_$_$Helper.instance.link(value,this,"state");
			}
			this.state = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.state = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				var fieldPath = this.__makeFieldPath(["state"]);
				this.__dbChanges.changes.push(value != null ? { kind : "set", path : fieldPath, value : HeroState_$_$Helper.instance.toRawValue(value)} : { kind : "delete", path : fieldPath});
			}
		}
		return value;
	}
	,__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
		if(this.state != null) {
			HeroState_$_$Helper.instance.setup(this.state,transaction,dbChanges);
		}
	}
	,__toRawValue: function() {
		var raw = { };
		if(this.name != null) {
			raw.name = this.name;
		}
		if(this.state != null) {
			raw.state = HeroState_$_$Helper.instance.toRawValue(this.state);
		}
		return raw;
	}
});
var HeroState = { __ename__ : true, __constructs__ : ["Free","InSquad","OnMap","AtWar"] };
HeroState.Free = ["Free",0];
HeroState.Free.toString = $estr;
HeroState.Free.__enum__ = HeroState;
HeroState.InSquad = ["InSquad",1];
HeroState.InSquad.toString = $estr;
HeroState.InSquad.__enum__ = HeroState;
HeroState.OnMap = function(placeId) { var $x = ["OnMap",2,placeId]; $x.__enum__ = HeroState; $x.toString = $estr; return $x; };
HeroState.AtWar = function(warData) { var $x = ["AtWar",3,warData]; $x.__enum__ = HeroState; $x.toString = $estr; return $x; };
var HeroWarData = function() {
	this.set_attackCount(0);
};
HeroWarData.__name__ = true;
HeroWarData.__fromRawValue = function(raw) {
	var instance = Object.create(HeroWarData.prototype);
	instance.set_attackCount(raw.attackCount);
	return instance;
};
HeroWarData.__super__ = classy_core_Value;
HeroWarData.prototype = $extend(classy_core_Value.prototype,{
	set_attackCount: function(value) {
		var _gthis = this;
		var oldValue = this.attackCount;
		if(oldValue != value) {
			this.attackCount = value;
			if(this.__transaction != null) {
				this.__transaction.rollbacks.push(function() {
					return _gthis.attackCount = oldValue;
				});
			}
			if(this.__dbChanges != null) {
				this.__dbChanges.changes.push({ kind : "set", path : this.__makeFieldPath(["attackCount"]), value : value});
			}
		}
		return value;
	}
	,__toRawValue: function() {
		var raw = { };
		raw.attackCount = this.attackCount;
		return raw;
	}
});
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var data = new GameData();
	var hero = new Hero("Sicario");
	hero.set_state(HeroState.AtWar(new HeroWarData()));
	data.player.heroes.push(hero);
	var dbChanges = new classy_core_DbChanges();
	data.setup(new classy_core_Transaction(),dbChanges);
	console.log("Main.hx:61:",JSON.stringify(data.toRawValue()));
	var arr = data.player.heroes.array;
	var _g_length = arr.length;
	var _g_index = 0;
	while(_g_index < _g_length) {
		var _g = arr[_g_index++].state;
		switch(_g[1]) {
		case 0:case 1:case 2:
			console.log("Main.hx:65:","not at war!");
			break;
		case 3:
			var warData = _g[2];
			warData.set_attackCount(warData.attackCount + 1);
			break;
		}
	}
	var _g1 = 0;
	var _g11 = dbChanges.commit();
	while(_g1 < _g11.length) console.log("Main.hx:72:",JSON.stringify(_g11[_g1++]));
	console.log("Main.hx:74:",JSON.stringify(data.toRawValue()));
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
var classy_core_ArrayValueImpl = function() {
	this.array = [];
};
classy_core_ArrayValueImpl.__name__ = true;
classy_core_ArrayValueImpl.__fromRawValue = function(raw,converter) {
	var instance = new classy_core_ArrayValueImpl();
	var _g = 0;
	var _g1 = raw;
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		instance.array.push(converter != null ? converter.fromRawValue(value) : value);
	}
	return instance;
};
classy_core_ArrayValueImpl.__super__ = classy_core_ValueBase;
classy_core_ArrayValueImpl.prototype = $extend(classy_core_ValueBase.prototype,{
	__setup: function(transaction,dbChanges) {
		this.__transaction = transaction;
		this.__dbChanges = dbChanges;
		if(this.helper != null) {
			var _g = 0;
			var _g1 = this.array;
			while(_g < _g1.length) this.helper.setup(_g1[_g++],transaction,dbChanges);
		}
	}
	,push: function(value) {
		var _gthis = this;
		var name = "" + this.array.length;
		var result = this.array.push(value);
		if(this.helper != null) {
			this.helper.link(value,this,name);
		}
		if(this.__transaction != null) {
			this.__transaction.rollbacks.push(function() {
				return _gthis.array.pop();
			});
		}
		if(this.__dbChanges != null) {
			this.__dbChanges.changes.push({ kind : "push", path : this.__makeFieldPath([]), value : this.helper != null ? this.helper.toRawValue(value) : value});
		}
		return result;
	}
	,__toRawValue: function() {
		var raw = [];
		var _g = 0;
		var _g1 = this.array;
		while(_g < _g1.length) {
			var value = _g1[_g];
			++_g;
			raw.push(this.helper != null ? this.helper.toRawValue(value) : value);
		}
		return raw;
	}
});
var classy_core_DbChanges = function() {
	this.changes = [];
};
classy_core_DbChanges.__name__ = true;
classy_core_DbChanges.prototype = {
	commit: function() {
		var committedChanges = this.changes;
		this.changes = [];
		return committedChanges;
	}
};
var classy_core_Transaction = function() {
	this.rollbacks = [];
};
classy_core_Transaction.__name__ = true;
var classy_core_ValueHelper = function() {
};
classy_core_ValueHelper.__name__ = true;
classy_core_ValueHelper.__interfaces__ = [classy_core_Helper];
classy_core_ValueHelper.prototype = {
	setup: function(value,transaction,dbChanges) {
		value.__setup(transaction,dbChanges);
	}
	,link: function(value,parent,name) {
		value.__link(parent,name);
	}
	,toRawValue: function(value) {
		return value.__toRawValue();
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if((o instanceof Array)) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
HeroState_$_$Helper.instance = new HeroState_$_$Helper();
HeroState_$_$RawValueConverter.instance = new HeroState_$_$RawValueConverter();
Hero_$_$RawValueConverter.instance = new Hero_$_$RawValueConverter();
classy_core_ValueHelper.instance = new classy_core_ValueHelper();
Main.main();
})();
